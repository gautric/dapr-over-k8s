---
- name: Dapr PubSub Installation
  hosts: localhost
  vars:
     app_namespace: kafka-metrics-mgr
     apps: 
      - sub-app
      - pub-app
     service_account_name: grafana-serviceaccount
  tasks:

    - name: "Create {{ app_namespace }} namespace"
      kubernetes.core.k8s:
        name: "{{ app_namespace }}"
        api_version: v1
        kind: Namespace
        state: present
      with_items:
        - "{{ app_namespace }}"

    - name: Check if K8S is an Openshift instance
      kubernetes.core.k8s_info:
        api_version: route.openshift.io/v1
        kind: Route
        namespace: openshift-image-registry
        name: default-route
      register: route

    - debug: msg="Openshift {{ route.resources[0].spec.host }}"
      when: route.api_found

    - name: Check if AMQ Stream Operator
      kubernetes.core.k8s_info:
        api_version: packages.operators.coreos.com/v1
        kind: PackageManifest
        namespace: openshift-marketplace
        name: amq-streams
      register: amq_streams_operator_check

    - name: "Deploy Grafana ServiceAccount"
      kubernetes.core.k8s:
        api_version: v1
        state: present
        kind: ServiceAccount
        namespace: "{{ app_namespace }}"
        definition:
          metadata:
            name: "{{ service_account_name }}"
            labels:
              app: grafana
            annotations:
              app: grafana

    - name: Check ServiceAccount
      kubernetes.core.k8s_info:
        api_version: v1
        kind: ServiceAccount
        namespace: "{{ app_namespace }}"
        name: "{{ service_account_name }}"
      register: service_account

    - name: Set Secret Token Name
      set_fact:
        secret_token_name: "{{ service_account.resources[0].secrets | map(attribute='name') | select('search', '-token-') | first }}" 

    - name: Check Secret
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        namespace: "{{ app_namespace }}"
        name: "{{ secret_token_name }}"
      register: secret

    - name: Set Token
      set_fact:
        secret_token: "{{ secret.resources[0].data.token | b64decode  }}" 

    - name: Install Pub-Sub-AMQStream Helm Chart
      kubernetes.core.helm:
        name: dapr-amqstream
        namespace: "{{ app_namespace }}"
        chart_ref: ./helm/charts/pub-sub-amqstream
        release_state: present
        values:
          grafana:
            secret_token: "{{ secret_token }}"
          rbac:
            create: true
          operator:
            install: false

      register: helm_ret



