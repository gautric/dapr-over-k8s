apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: strimzi
spec:
  replicas: 1
  selector:
    matchLabels:
      name: grafana
  template:
    metadata:
      labels:
        name: grafana
    spec:
      serviceAccountName: grafana-serviceaccount
      containers:
      - name: grafana
        image: grafana/grafana:9.1.4
        ports:
        - name: grafana
          containerPort: 3000
          protocol: TCP
        volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
        - name: grafana-logs
          mountPath: /var/log/grafana
        - name: grafana-config
          mountPath: /etc/grafana/provisioning/datasources/datasource.yaml
          readOnly: true
          subPath: datasource.yaml
        - name: grafana-dashboards-provider
          mountPath: /etc/grafana/provisioning/dashboards/grafana-dashboards-provider.yaml
          subPath: grafana-dashboards-provider.yaml
        - name: grafana-dashboards-strimzi-kafka
          mountPath: /var/lib/grafana/dashboards/grafana-dashboards-strimzi-kafka.json
          subPath: grafana-dashboards-strimzi-kafka.json
          
        env:
        - name: DS_PROMETHEUS
          value: Prometheus
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_NAME
          value: Dapr.io / Kafka Org
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: Admin
        - name: GF_AUTH_ANONYMOUS_HIDE_VERSION
          value: "true"
          
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 20
      volumes:
      - name: grafana-data
        emptyDir: {}
      - name: grafana-logs
        emptyDir: {}
      - name: grafana-config
        configMap:
          name: grafana-config
      - name: grafana-dashboards-provider
        configMap:
          name: grafana-dashboards-provider
      - name: grafana-dashboards-strimzi-kafka
        configMap:
          name: grafana-dashboards-strimzi-kafka
       
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: strimzi
spec:
  ports:
  - name: grafana
    port: 3000
    targetPort: 3000
    protocol: TCP
  selector:
    name: grafana
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: strimzi
  annotations:
    openshift.io/host.generated: 'true'
  name: grafana
  namespace: kafka-metrics-mgr
spec:
  to:
    kind: Service
    name: grafana
    weight: 100
  port:
    targetPort: grafana
  tls:
    termination: edge
  wildcardPolicy: None
